<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.w3.org/1998/Math/MathML" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:ssml="http://www.w3.org/2001/10/synthesis" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:mathml="http://www.w3.org/1998/Math/MathML" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg">
  <xs:include schemaLocation="mathml3-strict-content.xsd"/>
  <xs:import schemaLocation="local.xsd"/>
  <xs:import namespace="http://www.idpf.org/2007/ops" schemaLocation="epub.xsd"/>
  <xs:import namespace="http://www.w3.org/1999/xhtml" schemaLocation="epub-nav-30.xsd"/>
  <xs:import namespace="http://www.w3.org/1999/xlink" schemaLocation="svg-xlink-attrib.xsd"/>
  <xs:import namespace="http://www.w3.org/2000/svg" schemaLocation="svg.xsd"/>
  <xs:import namespace="http://www.w3.org/2001/10/synthesis" schemaLocation="epub-ssml-attrs.xsd"/>
  <xs:import namespace="http://www.w3.org/2001/xml-events" schemaLocation="ev.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--
        This is the Mathematical Markup Language (MathML) 3.0, an XML
        application for describing mathematical notation and capturing
        both its structure and content.
    
        With additional changes for integration into the validator.nu
        service.
    
        Copyright 1998-2010 W3C (MIT, ERCIM, Keio)
        Copyright 2012 Mozilla Foundation
        Copyright 2014-2019 W3C (MIT, ERCIM, Keio, Beihang)
    
        Use and distribution of this code are permitted under the terms
        W3C Software Notice and License
        http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231
  -->
  <xs:complexType name="cn.content" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="mathml:mglyph"/>
      <xs:element ref="mathml:sep"/>
      <xs:element ref="mathml:PresentationExpression"/>
    </xs:choice>
  </xs:complexType>
  <xs:attributeGroup name="cn.attributes">
    <xs:attributeGroup ref="mathml:CommonAtt"/>
    <xs:attributeGroup ref="mathml:DefEncAtt"/>
    <xs:attribute name="type"/>
    <xs:attribute name="base"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="ci.attributes">
    <xs:attributeGroup ref="mathml:CommonAtt"/>
    <xs:attributeGroup ref="mathml:DefEncAtt"/>
    <xs:attribute name="type"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="ci.type">
    <xs:attribute name="type" use="required"/>
  </xs:attributeGroup>
  <xs:complexType name="ci.content" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="mathml:mglyph"/>
      <xs:element ref="mathml:PresentationExpression"/>
    </xs:choice>
  </xs:complexType>
  <xs:attributeGroup name="csymbol.attributes">
    <xs:attributeGroup ref="mathml:CommonAtt"/>
    <xs:attributeGroup ref="mathml:DefEncAtt"/>
    <xs:attribute name="type"/>
    <xs:attribute name="cd" type="xs:NCName"/>
  </xs:attributeGroup>
  <xs:complexType name="csymbol.content" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="mathml:mglyph"/>
      <xs:element ref="mathml:PresentationExpression"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="bvar">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="mathml:ci"/>
          <xs:group ref="mathml:semantics-ci"/>
        </xs:choice>
        <xs:element ref="mathml:degree"/>
      </xs:choice>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="cbytes.attributes">
    <xs:attributeGroup ref="mathml:CommonAtt"/>
    <xs:attributeGroup ref="mathml:DefEncAtt"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="cs.attributes">
    <xs:attributeGroup ref="mathml:CommonAtt"/>
    <xs:attributeGroup ref="mathml:DefEncAtt"/>
  </xs:attributeGroup>
  <xs:complexType name="apply.content">
    <xs:choice>
      <xs:group maxOccurs="unbounded" ref="mathml:ContExp"/>
      <xs:sequence>
        <xs:group ref="mathml:ContExp"/>
        <xs:group ref="mathml:BvarQ"/>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="mathml:Qualifier"/>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="mathml:ContExp"/>
      </xs:sequence>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="bind.content">
    <xs:complexContent>
      <xs:extension base="mathml:apply.content"/>
    </xs:complexContent>
  </xs:complexType>
  <!-- changed pattern name to math-base to avoid name conflict - mike -->
  <xs:attributeGroup name="math-base">
    <xs:attribute name="base" use="required"/>
  </xs:attributeGroup>
  <xs:element name="sep">
    <xs:complexType/>
  </xs:element>
  <xs:element name="PresentationExpression" abstract="true"/>
  <xs:group name="DomainQ">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="mathml:domainofapplication"/>
        <xs:element ref="mathml:condition"/>
        <xs:element ref="mathml:interval"/>
        <xs:sequence>
          <xs:element ref="mathml:lowlimit"/>
          <xs:element minOccurs="0" ref="mathml:uplimit"/>
        </xs:sequence>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:element name="domainofapplication">
    <xs:complexType>
      <xs:group ref="mathml:ContExp"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="condition">
    <xs:complexType>
      <xs:group ref="mathml:ContExp"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="uplimit">
    <xs:complexType>
      <xs:group ref="mathml:ContExp"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="lowlimit">
    <xs:complexType>
      <xs:group ref="mathml:ContExp"/>
    </xs:complexType>
  </xs:element>
  <xs:group name="Qualifier">
    <xs:choice>
      <xs:group ref="mathml:DomainQ"/>
      <xs:element ref="mathml:degree"/>
      <xs:element ref="mathml:momentabout"/>
      <xs:element ref="mathml:logbase"/>
    </xs:choice>
  </xs:group>
  <xs:element name="degree">
    <xs:complexType>
      <xs:group ref="mathml:ContExp"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="momentabout">
    <xs:complexType>
      <xs:group ref="mathml:ContExp"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="logbase">
    <xs:complexType>
      <xs:group ref="mathml:ContExp"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="type">
    <xs:attribute name="type" use="required"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="order">
    <xs:attribute name="order" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="numeric"/>
          <xs:enumeration value="lexicographic"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="closure">
    <xs:attribute name="closure" use="required"/>
  </xs:attributeGroup>
  <xs:element name="piecewise">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="mathml:piece"/>
        <xs:element ref="mathml:otherwise"/>
      </xs:choice>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="piece">
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="mathml:ContExp"/>
        <xs:group ref="mathml:ContExp"/>
      </xs:sequence>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="otherwise">
    <xs:complexType>
      <xs:group ref="mathml:ContExp"/>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DeprecatedContExp" abstract="true"/>
  <xs:element name="reln" substitutionGroup="mathml:DeprecatedContExp">
    <xs:complexType>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="mathml:ContExp"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="fn" substitutionGroup="mathml:DeprecatedContExp">
    <xs:complexType>
      <xs:group ref="mathml:ContExp"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="declare" substitutionGroup="mathml:DeprecatedContExp">
    <xs:complexType>
      <xs:group maxOccurs="unbounded" ref="mathml:ContExp"/>
      <xs:attribute name="type" type="xs:string"/>
      <xs:attribute name="scope" type="xs:string"/>
      <xs:attribute name="nargs" type="xs:nonNegativeInteger"/>
      <xs:attribute name="occurrence">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="prefix"/>
            <xs:enumeration value="infix"/>
            <xs:enumeration value="function-model"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="interval.class" abstract="true">
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="mathml:ContExp"/>
        <xs:group ref="mathml:ContExp"/>
      </xs:sequence>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
      <xs:attribute name="closure"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="interval" substitutionGroup="mathml:interval.class"/>
  <xs:element name="unary-functional.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="inverse" substitutionGroup="mathml:unary-functional.class"/>
  <xs:element name="ident" substitutionGroup="mathml:unary-functional.class"/>
  <xs:element name="domain" substitutionGroup="mathml:unary-functional.class"/>
  <xs:element name="codomain" substitutionGroup="mathml:unary-functional.class"/>
  <!-- changed pattern name to math-image to avoid name conflict - mike -->
  <xs:element name="image" substitutionGroup="mathml:unary-functional.class"/>
  <xs:element name="ln" substitutionGroup="mathml:unary-functional.class"/>
  <xs:element name="log" substitutionGroup="mathml:unary-functional.class"/>
  <xs:element name="moment" substitutionGroup="mathml:unary-functional.class"/>
  <xs:element name="lambda.class" abstract="true">
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="mathml:BvarQ"/>
        <xs:group ref="mathml:DomainQ"/>
        <xs:group ref="mathml:ContExp"/>
      </xs:sequence>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="lambda" substitutionGroup="mathml:lambda.class"/>
  <xs:element name="nary-functional.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="compose" substitutionGroup="mathml:nary-functional.class"/>
  <xs:group name="binary-arith.class">
    <xs:choice>
      <xs:element ref="mathml:quotient"/>
      <xs:element ref="mathml:divide"/>
      <xs:element ref="mathml:minus"/>
      <xs:element ref="mathml:power"/>
      <xs:element ref="mathml:rem"/>
      <xs:element ref="mathml:root"/>
    </xs:choice>
  </xs:group>
  <xs:element name="quotient">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="divide">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="minus">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="power">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="rem">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="root">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:group name="unary-arith.class">
    <xs:choice>
      <xs:element ref="mathml:factorial"/>
      <xs:element ref="mathml:minus"/>
      <xs:element ref="mathml:root"/>
      <xs:element ref="mathml:abs"/>
      <xs:element ref="mathml:conjugate"/>
      <xs:element ref="mathml:arg"/>
      <xs:element ref="mathml:real"/>
      <xs:element ref="mathml:imaginary"/>
      <xs:element ref="mathml:floor"/>
      <xs:element ref="mathml:ceiling"/>
      <xs:element ref="mathml:exp"/>
    </xs:choice>
  </xs:group>
  <xs:element name="factorial">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="abs">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="conjugate">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="arg">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="real">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="imaginary">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="floor">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ceiling">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="exp">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="nary-minmax.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="max" substitutionGroup="mathml:nary-minmax.class"/>
  <xs:element name="min" substitutionGroup="mathml:nary-minmax.class"/>
  <xs:element name="nary-arith.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="plus" substitutionGroup="mathml:nary-arith.class"/>
  <xs:element name="times" substitutionGroup="mathml:nary-arith.class"/>
  <xs:element name="gcd" substitutionGroup="mathml:nary-arith.class"/>
  <xs:element name="lcm" substitutionGroup="mathml:nary-arith.class"/>
  <xs:element name="nary-logical.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="and" substitutionGroup="mathml:nary-logical.class"/>
  <xs:element name="or" substitutionGroup="mathml:nary-logical.class"/>
  <xs:element name="xor" substitutionGroup="mathml:nary-logical.class"/>
  <xs:element name="unary-logical.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="not" substitutionGroup="mathml:unary-logical.class"/>
  <xs:element name="binary-logical.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="implies" substitutionGroup="mathml:binary-logical.class"/>
  <xs:element name="equivalent" substitutionGroup="mathml:binary-logical.class"/>
  <xs:element name="quantifier.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="forall" substitutionGroup="mathml:quantifier.class"/>
  <xs:element name="exists" substitutionGroup="mathml:quantifier.class"/>
  <xs:element name="nary-reln.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="eq" substitutionGroup="mathml:nary-reln.class"/>
  <xs:element name="gt" substitutionGroup="mathml:nary-reln.class"/>
  <xs:element name="lt" substitutionGroup="mathml:nary-reln.class"/>
  <xs:element name="geq" substitutionGroup="mathml:nary-reln.class"/>
  <xs:element name="leq" substitutionGroup="mathml:nary-reln.class"/>
  <xs:element name="binary-reln.class" abstract="true"/>
  <xs:element name="neq" substitutionGroup="mathml:binary-reln.class">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="approx" substitutionGroup="mathml:binary-reln.class">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="factorof" substitutionGroup="mathml:binary-reln.class">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="tendsto" substitutionGroup="mathml:binary-reln.class">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
      <xs:attribute name="type"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="int.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="int" substitutionGroup="mathml:int.class"/>
  <xs:element name="Differential-Operator.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="diff" substitutionGroup="mathml:Differential-Operator.class"/>
  <xs:element name="partialdiff.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="partialdiff" substitutionGroup="mathml:partialdiff.class"/>
  <xs:element name="unary-veccalc.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="divergence" substitutionGroup="mathml:unary-veccalc.class"/>
  <xs:element name="grad" substitutionGroup="mathml:unary-veccalc.class"/>
  <xs:element name="curl" substitutionGroup="mathml:unary-veccalc.class"/>
  <xs:element name="laplacian" substitutionGroup="mathml:unary-veccalc.class"/>
  <xs:element name="nary-setlist-constructor.class" abstract="true"/>
  <!-- changed pattern name to math-set to avoid name conflict - mike -->
  <xs:element name="set" substitutionGroup="mathml:nary-setlist-constructor.class">
    <xs:complexType>
      <xs:sequence>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="mathml:BvarQ"/>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="mathml:DomainQ"/>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="mathml:ContExp"/>
      </xs:sequence>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
      <xs:attribute name="type"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="list" substitutionGroup="mathml:nary-setlist-constructor.class">
    <xs:complexType>
      <xs:sequence>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="mathml:BvarQ"/>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="mathml:DomainQ"/>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="mathml:ContExp"/>
      </xs:sequence>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
      <xs:attribute name="order">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="numeric"/>
            <xs:enumeration value="lexicographic"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="nary-set.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="union" substitutionGroup="mathml:nary-set.class"/>
  <xs:element name="intersect" substitutionGroup="mathml:nary-set.class"/>
  <xs:element name="cartesianproduct" substitutionGroup="mathml:nary-set.class"/>
  <xs:element name="binary-set.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="in" substitutionGroup="mathml:binary-set.class"/>
  <xs:element name="notin" substitutionGroup="mathml:binary-set.class"/>
  <xs:element name="notsubset" substitutionGroup="mathml:binary-set.class"/>
  <xs:element name="notprsubset" substitutionGroup="mathml:binary-set.class"/>
  <xs:element name="setdiff" substitutionGroup="mathml:binary-set.class"/>
  <xs:element name="nary-set-reln.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="subset" substitutionGroup="mathml:nary-set-reln.class"/>
  <xs:element name="prsubset" substitutionGroup="mathml:nary-set-reln.class"/>
  <xs:element name="unary-set.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="card" substitutionGroup="mathml:unary-set.class"/>
  <xs:element name="sum.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="sum" substitutionGroup="mathml:sum.class"/>
  <xs:element name="product.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="product" substitutionGroup="mathml:product.class"/>
  <xs:element name="limit.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="limit" substitutionGroup="mathml:limit.class"/>
  <xs:element name="unary-elementary.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="sin" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="cos" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="tan" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="sec" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="csc" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="cot" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="sinh" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="cosh" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="tanh" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="sech" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="csch" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="coth" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="arcsin" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="arccos" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="arctan" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="arccosh" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="arccot" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="arccoth" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="arccsc" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="arccsch" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="arcsec" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="arcsech" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="arcsinh" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="arctanh" substitutionGroup="mathml:unary-elementary.class"/>
  <xs:element name="nary-stats.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="mean" substitutionGroup="mathml:nary-stats.class"/>
  <xs:element name="sdev" substitutionGroup="mathml:nary-stats.class"/>
  <xs:element name="variance" substitutionGroup="mathml:nary-stats.class"/>
  <xs:element name="median" substitutionGroup="mathml:nary-stats.class"/>
  <xs:element name="mode" substitutionGroup="mathml:nary-stats.class"/>
  <xs:element name="nary-constructor.class" abstract="true">
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="mathml:BvarQ"/>
        <xs:group ref="mathml:DomainQ"/>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="mathml:ContExp"/>
      </xs:sequence>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="vector" substitutionGroup="mathml:nary-constructor.class"/>
  <xs:element name="matrix" substitutionGroup="mathml:nary-constructor.class"/>
  <xs:element name="matrixrow" substitutionGroup="mathml:nary-constructor.class"/>
  <xs:element name="unary-linalg.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="determinant" substitutionGroup="mathml:unary-linalg.class"/>
  <xs:element name="transpose" substitutionGroup="mathml:unary-linalg.class"/>
  <xs:element name="nary-linalg.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="selector" substitutionGroup="mathml:nary-linalg.class"/>
  <xs:element name="binary-linalg.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="vectorproduct" substitutionGroup="mathml:binary-linalg.class"/>
  <xs:element name="scalarproduct" substitutionGroup="mathml:binary-linalg.class"/>
  <xs:element name="outerproduct" substitutionGroup="mathml:binary-linalg.class"/>
  <xs:element name="constant-set.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="integers" substitutionGroup="mathml:constant-set.class"/>
  <xs:element name="reals" substitutionGroup="mathml:constant-set.class"/>
  <xs:element name="rationals" substitutionGroup="mathml:constant-set.class"/>
  <xs:element name="naturalnumbers" substitutionGroup="mathml:constant-set.class"/>
  <xs:element name="complexes" substitutionGroup="mathml:constant-set.class"/>
  <xs:element name="primes" substitutionGroup="mathml:constant-set.class"/>
  <xs:element name="emptyset" substitutionGroup="mathml:constant-set.class"/>
  <xs:element name="constant-arith.class" abstract="true">
    <xs:complexType>
      <xs:attributeGroup ref="mathml:CommonAtt"/>
      <xs:attributeGroup ref="mathml:DefEncAtt"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="exponentiale" substitutionGroup="mathml:constant-arith.class"/>
  <xs:element name="imaginaryi" substitutionGroup="mathml:constant-arith.class"/>
  <xs:element name="notanumber" substitutionGroup="mathml:constant-arith.class"/>
  <xs:element name="true" substitutionGroup="mathml:constant-arith.class"/>
  <xs:element name="false" substitutionGroup="mathml:constant-arith.class"/>
  <xs:element name="pi" substitutionGroup="mathml:constant-arith.class"/>
  <xs:element name="eulergamma" substitutionGroup="mathml:constant-arith.class"/>
  <xs:element name="infinity" substitutionGroup="mathml:constant-arith.class"/>
</xs:schema>
