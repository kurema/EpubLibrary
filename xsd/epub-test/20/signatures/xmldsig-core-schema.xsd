<?xml version="1.0" encoding="UTF-8"?>
<!-- http://www.xml.com/lpt/a/2002/01/23/relaxng.html -->
<!-- http://www.oasis-open.org/committees/relax-ng/tutorial-20011203.html -->
<!-- http://www.zvon.org/xxl/XMLSchemaTutorial/Output/ser_wildcards_st8.html -->
<!-- http://lists.oasis-open.org/archives/relax-ng-comment/200206/maillist.html -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.w3.org/2000/09/xmldsig#" xmlns:xmldsig="http://www.w3.org/2000/09/xmldsig#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns1="urn:oasis:names:tc:opendocument:xmlns:container">
  <xs:import namespace="http://www.w3.org/2001/XMLSchema-instance" schemaLocation="xsi.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:opendocument:xmlns:container" schemaLocation="signatures.xsd"/>
  <!--
    <start combine="choice">
            <element name='Signature'><ref name='SignatureType'/></element>
    </start>   
  -->
  <xs:simpleType name="CryptoBinary">
    <xs:restriction base="xs:base64Binary"/>
  </xs:simpleType>
  <xs:complexType name="SignatureType">
    <xs:sequence>
      <xs:element ref="xmldsig:SignedInfo"/>
      <xs:element ref="xmldsig:SignatureValue"/>
      <xs:element minOccurs="0" ref="xmldsig:KeyInfo"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="xmldsig:Object"/>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:ID"/>
    <xs:attribute ref="xsi:schemaLocation"/>
  </xs:complexType>
  <xs:element name="SignedInfo" type="xmldsig:SignedInfoType"/>
  <xs:element name="SignatureValue" type="xmldsig:SignatureValueType"/>
  <xs:element name="KeyInfo" type="xmldsig:KeyInfoType"/>
  <xs:element name="Object" type="xmldsig:ObjectType"/>
  <xs:complexType name="SignatureValueType">
    <xs:simpleContent>
      <xs:extension base="xs:base64Binary">
        <xs:attribute name="Id" type="xs:ID"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!-- Start SignedInfo -->
  <xs:complexType name="SignedInfoType">
    <xs:sequence>
      <xs:element ref="xmldsig:CanonicalizationMethod"/>
      <xs:element ref="xmldsig:SignatureMethod"/>
      <xs:element minOccurs="0" ref="xmldsig:KeyInfo"/>
      <xs:element maxOccurs="unbounded" ref="xmldsig:Reference"/>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:ID"/>
  </xs:complexType>
  <xs:element name="CanonicalizationMethod" type="xmldsig:CanonicalizationMethodType"/>
  <xs:element name="SignatureMethod" type="xmldsig:SignatureMethodType"/>
  <xs:element name="Reference" type="xmldsig:ReferenceType"/>
  <xs:complexType name="CanonicalizationMethodType" mixed="true">
    <xs:group minOccurs="0" maxOccurs="unbounded" ref="xmldsig:anyThing"/>
    <xs:attribute name="Algorithm" type="xs:anyURI"/>
  </xs:complexType>
  <xs:complexType name="SignatureMethodType" mixed="true">
    <xs:sequence>
      <xs:element minOccurs="0" ref="xmldsig:HMACOutputLength"/>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="xmldsig:anyThing"/>
    </xs:sequence>
    <xs:attribute name="Algorithm" type="xs:anyURI"/>
  </xs:complexType>
  <xs:element name="HMACOutputLength" type="xs:integer"/>
  <!-- Start Reference -->
  <xs:complexType name="ReferenceType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="xmldsig:Transforms"/>
      <xs:element ref="xmldsig:DigestMethod"/>
      <xs:element ref="xmldsig:DigestValue"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI"/>
    <xs:attribute name="URI" type="xs:anyURI"/>
    <xs:attribute name="Id" type="xs:ID"/>
  </xs:complexType>
  <xs:element name="Transforms" type="xmldsig:TransformsType"/>
  <xs:element name="DigestMethod" type="xmldsig:DigestMethodType"/>
  <xs:element name="DigestValue" type="xmldsig:DigestValueType"/>
  <xs:complexType name="TransformsType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="xmldsig:Transform"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Transform" type="xmldsig:TransformType"/>
  <xs:complexType name="TransformType" mixed="true">
    <xs:sequence>
      <xs:element minOccurs="0" ref="xmldsig:XPath"/>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="xmldsig:anyThing"/>
    </xs:sequence>
    <xs:attribute name="Algorithm" use="required" type="xs:anyURI"/>
  </xs:complexType>
  <xs:element name="XPath" type="xs:string"/>
  <!-- End Reference -->
  <xs:complexType name="DigestMethodType" mixed="true">
    <xs:group minOccurs="0" maxOccurs="unbounded" ref="xmldsig:anyThing"/>
    <xs:attribute name="Algorithm" use="required" type="xs:anyURI"/>
  </xs:complexType>
  <xs:simpleType name="DigestValueType">
    <xs:restriction base="xs:base64Binary"/>
  </xs:simpleType>
  <!-- End SignedInfo -->
  <!-- Start KeyInfo -->
  <xs:complexType name="KeyInfoType" mixed="true">
    <xs:choice maxOccurs="unbounded">
      <xs:element ref="xmldsig:KeyName"/>
      <xs:element ref="xmldsig:KeyValue"/>
      <xs:element ref="xmldsig:RetrievalMethod"/>
      <xs:element ref="xmldsig:X509Data"/>
      <xs:element ref="xmldsig:PGPData"/>
      <xs:element ref="xmldsig:SPKIData"/>
      <xs:element ref="xmldsig:MgmtData"/>
      <xs:group ref="xmldsig:anyThing"/>
    </xs:choice>
    <xs:attribute name="Id" type="xs:ID"/>
  </xs:complexType>
  <xs:element name="KeyName" type="xs:string"/>
  <xs:element name="KeyValue" type="xmldsig:KeyValueType"/>
  <xs:element name="RetrievalMethod" type="xmldsig:RetrievalMethodType"/>
  <xs:element name="X509Data" type="xmldsig:X509DataType"/>
  <xs:element name="PGPData" type="xmldsig:PGPDataType"/>
  <xs:element name="SPKIData" type="xmldsig:SPKIDataType"/>
  <xs:element name="MgmtData" type="xs:string"/>
  <xs:complexType name="KeyValueType" mixed="true">
    <xs:choice minOccurs="0">
      <xs:element ref="xmldsig:DSAKeyValue"/>
      <xs:element ref="xmldsig:RSAKeyValue"/>
      <xs:group ref="xmldsig:anyThing"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="DSAKeyValue" type="xmldsig:DSAKeyValueType"/>
  <xs:element name="RSAKeyValue" type="xmldsig:RSAKeyValueType"/>
  <xs:complexType name="RetrievalMethodType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="xmldsig:Transforms"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI"/>
    <xs:attribute name="URI" type="xs:anyURI"/>
  </xs:complexType>
  <!-- Start X509Data -->
  <xs:complexType name="X509DataType" mixed="true">
    <xs:choice maxOccurs="unbounded">
      <xs:element ref="xmldsig:X509IssuerSerial"/>
      <xs:element ref="xmldsig:X509SKI"/>
      <xs:element ref="xmldsig:X509SubjectName"/>
      <xs:element ref="xmldsig:X509Certificate"/>
      <xs:element ref="xmldsig:X509CRL"/>
      <xs:group ref="xmldsig:anyThing"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="X509IssuerSerial">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="xmldsig:X509IssuerName"/>
        <xs:element ref="xmldsig:X509SerialNumber"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="X509IssuerName" type="xs:string"/>
  <xs:element name="X509SerialNumber" type="xs:integer"/>
  <xs:element name="X509SKI" type="xs:base64Binary"/>
  <xs:element name="X509SubjectName" type="xs:string"/>
  <xs:element name="X509Certificate" type="xs:base64Binary"/>
  <xs:element name="X509CRL" type="xs:base64Binary"/>
  <!-- End X509Data -->
  <!-- Begin PGPData -->
  <xs:complexType name="PGPDataType" mixed="true">
    <xs:choice>
      <xs:sequence>
        <xs:element ref="xmldsig:PGPKeyID"/>
        <xs:element minOccurs="0" ref="xmldsig:PGPKeyPacket"/>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="xmldsig:anyThing"/>
      </xs:sequence>
      <xs:sequence>
        <xs:element ref="xmldsig:PGPKeyPacket"/>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="xmldsig:anyThing"/>
      </xs:sequence>
    </xs:choice>
  </xs:complexType>
  <xs:element name="PGPKeyID" type="xs:base64Binary"/>
  <xs:element name="PGPKeyPacket" type="xs:base64Binary"/>
  <!-- End PGPData -->
  <!-- Begin SPKIData -->
  <xs:complexType name="SPKIDataType" mixed="true">
    <xs:sequence maxOccurs="unbounded">
      <xs:element ref="xmldsig:SPKISexp"/>
      <xs:group minOccurs="0" ref="xmldsig:anyThing"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="SPKISexp" type="xs:base64Binary"/>
  <!-- End SPKIData -->
  <!-- End KeyInfo -->
  <!-- Start Object (Manifest, SignatureProperty) -->
  <xs:complexType name="ObjectType" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="xmldsig:Manifest"/>
      <xs:element ref="xmldsig:SignatureProperties"/>
      <xs:group ref="xmldsig:anyThing"/>
    </xs:choice>
    <xs:attribute name="Encoding" type="xs:anyURI"/>
    <xs:attribute name="MimeType" type="xs:string"/>
    <xs:attribute name="Id" type="xs:ID"/>
  </xs:complexType>
  <xs:element name="Manifest" type="xmldsig:ManifestType"/>
  <xs:element name="SignatureProperties" type="xmldsig:SignaturePropertiesType"/>
  <xs:complexType name="ManifestType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="xmldsig:Reference"/>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:ID"/>
  </xs:complexType>
  <xs:complexType name="SignaturePropertiesType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="xmldsig:SignatureProperty"/>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:ID"/>
  </xs:complexType>
  <xs:element name="SignatureProperty" type="xmldsig:SignaturePropertyType"/>
  <xs:complexType name="SignaturePropertyType" mixed="true">
    <xs:group maxOccurs="unbounded" ref="xmldsig:anyThing"/>
    <xs:attribute name="Id" type="xs:ID"/>
    <xs:attribute name="Target" use="required" type="xs:anyURI"/>
  </xs:complexType>
  <!-- End Object (Manifest, SignatureProperty) -->
  <!-- Start KeyValue Element-types -->
  <xs:complexType name="DSAKeyValueType">
    <xs:sequence>
      <xs:sequence minOccurs="0">
        <xs:element ref="xmldsig:P"/>
        <xs:element ref="xmldsig:Q"/>
      </xs:sequence>
      <xs:element minOccurs="0" ref="xmldsig:G"/>
      <xs:element ref="xmldsig:Y"/>
      <xs:element minOccurs="0" ref="xmldsig:J"/>
      <xs:sequence minOccurs="0">
        <xs:element ref="xmldsig:Seed"/>
        <xs:element ref="xmldsig:PgenCounter"/>
      </xs:sequence>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="P" type="xmldsig:CryptoBinary"/>
  <xs:element name="Q" type="xmldsig:CryptoBinary"/>
  <xs:element name="G" type="xmldsig:CryptoBinary"/>
  <xs:element name="Y" type="xmldsig:CryptoBinary"/>
  <xs:element name="J" type="xmldsig:CryptoBinary"/>
  <xs:element name="Seed" type="xmldsig:CryptoBinary"/>
  <xs:element name="PgenCounter" type="xmldsig:CryptoBinary"/>
  <xs:complexType name="RSAKeyValueType">
    <xs:sequence>
      <xs:element ref="xmldsig:Modulus"/>
      <xs:element ref="xmldsig:Exponent"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Modulus" type="xmldsig:CryptoBinary"/>
  <xs:element name="Exponent" type="xmldsig:CryptoBinary"/>
  <!-- End KeyValue Element-types -->
  <!-- End Signature -->
  <!-- This should emulate the ANY content model under lax validation -->
  <xs:group name="anyThing">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:any namespace="##other" processContents="skip"/>
        <xs:any namespace="##local" processContents="skip"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:element name="Signature" type="xmldsig:SignatureType"/>
</xs:schema>
